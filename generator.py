import argparse


def generate_svg(examples, color, font_size, width, height, dur):
    comment = '<!-- https://github.com/DenverCoder1/readme-typing-svg/ -->'
    svg_tag = f'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 {width} {height}" style="background-color: #00000000;" width="{width}px" height="{height}x">'
    style = """
    <style>
        @font-face {
        font-family: 'Roboto Mono';
        font-style: normal;
        font-weight: 400;
        font-display: fallback;
        src: url(data:font/truetype;base64,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) format('truetype');
        }
    </style>
    """
    print(comment)
    print(svg_tag)
    print(style)
    for idx, e in enumerate(examples):
        begin = f'0s;d{len(examples) - 1}.end' if idx == 0 else f'd{idx - 1}.end'
        path = f"""
        <path id="path{idx}">
        <!-- Single line -->
        <animate id="d{idx}" attributeName="d" begin="{begin}" dur="{dur}ms" fill="remove" values="m0,60 h0 ; m0,60 h{width} ; m0,60 h{width} ; m0,60 h0" keyTimes="0;0.4;0.9;1"/>
        </path>
        """
        print(path)
        text = f"""
        <text font-family="&quot;Roboto Mono&quot;, monospace" fill="{color}" font-size="{font_size}" dominant-baseline="auto" x="0%" text-anchor="start">
        <textPath xlink:href="#path{idx}">
            {e}
        </textPath>
        </text>
        """
        print(text)
    print('</svg>')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='generator',
        description="Generates an SVG file that appears as if you're writing text"
    )
    parser.add_argument('--examples', type=argparse.FileType('r'), help='examples file', default='examples.txt')
    parser.add_argument('--color', type=str, help='text color in hex', default='#2ABB89')
    parser.add_argument('--font-size', type=int, help='text font size', default=18)
    parser.add_argument('--width', type=int, help='svg width in pixels', default=960)
    parser.add_argument('--height', type=int, help='svg height in pixels', default=120)
    parser.add_argument('--dur', type=int, help='duration of each line in ms', default=5000)
    args = parser.parse_args()
    examples = args.examples.read().splitlines()
    generate_svg(examples, args.color, args.font_size, args.width, args.height, args.dur)